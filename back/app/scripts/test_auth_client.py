import asyncio
import uuid
import sys
sys.path.append('/usr/src/app')
from src.services.user import auth_service
from src.core.config import settings

async def test():
    user_id = uuid.UUID('89ee9213-0207-4e76-b134-22f6c79d4ecf')

    print('=== –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π ===')

    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    import httpx
    async with httpx.AsyncClient() as client:
        auth_response = await client.post(
            f'{settings.auth_service.url}/api/v1/auth/login/',
            json={'username': 'admin', 'password': 'admin123'}
        )
        user_token = auth_response.json()['access_token']

    print('1. ‚úÖ Service token (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):')
    result1 = await auth_service.get_user_info(user_id)
    print(f'   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {result1.username}')

    print('\\n2. ‚úÖ User token:')
    result2 = await auth_service.get_user_info(user_id, user_token=user_token)
    print(f'   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {result2.username}')

    print('\\n3. ‚úÖ Convenience methods:')
    result3 = await auth_service.get_user_info_by_service(user_id)
    result4 = await auth_service.get_user_info_by_user(user_id, user_token)
    print(f'   Service method: {result3.username}')
    print(f'   User method: {result4.username}')

    print('\\n4. ‚úÖ –ë–∞—Ç—á-–∑–∞–ø—Ä–æ—Å—ã:')
    batch1 = await auth_service.get_users_info_by_service([user_id])
    batch2 = await auth_service.get_users_info_by_user([user_id], user_token)
    print(f'   –ë–∞—Ç—á service: {len(batch1)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    print(f'   –ë–∞—Ç—á user: {len(batch2)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')

    print('\\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!')

asyncio.run(test())