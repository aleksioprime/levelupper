"""init

Revision ID: 9dd2f07097a4
Revises: 
Create Date: 2025-03-19 15:48:49.524042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9dd2f07097a4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chromophore',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('device',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('patient',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('birth_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('session',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=True),
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('operator_id', sa.UUID(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spectrum',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('wavelength', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('overlap_coefficient',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('spectrum_id', sa.UUID(), nullable=False),
    sa.Column('chromophore_id', sa.UUID(), nullable=False),
    sa.Column('coefficient', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['chromophore_id'], ['chromophore.id'], ),
    sa.ForeignKeyConstraint(['spectrum_id'], ['spectrum.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raw_image',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('spectrum_id', sa.UUID(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.ForeignKeyConstraint(['spectrum_id'], ['spectrum.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reconstructed_image',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('chromophore_id', sa.UUID(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['chromophore_id'], ['chromophore.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('contour_path', sa.String(), nullable=False),
    sa.Column('s_coefficient', sa.Float(), nullable=False),
    sa.Column('mean_lesion_thb', sa.Float(), nullable=False),
    sa.Column('mean_skin_thb', sa.Float(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('result')
    op.drop_table('reconstructed_image')
    op.drop_table('raw_image')
    op.drop_table('overlap_coefficient')
    op.drop_table('spectrum')
    op.drop_table('session')
    op.drop_table('patient')
    op.drop_table('device')
    op.drop_table('chromophore')
    # ### end Alembic commands ###
