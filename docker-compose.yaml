x-app: &app
  env_file:
    - .env
  restart: unless-stopped
  platform: linux/amd64

services:
  postgres:
    image: postgres:14
    container_name: levelupper-postgres
    <<: *app
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./back/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    container_name: levelupper-redis
    <<: *app
    volumes:
      - redis_volume:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.13.0
    container_name: levelupper-elasticsearch
    <<: *app
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - es_volume:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-webserver:
    image: apache/airflow:2.9.1-python3.11
    container_name: levelupper-airflow-webserver
    <<: *app
    volumes:
      - ./back/airflow/dags:/opt/airflow/dags
      - ./back/airflow/logs:/opt/airflow/logs
      - ./back/airflow/plugins:/opt/airflow/plugins
      - ./back/app:/opt/airflow/app
      - ./back/airflow/requirements.txt:/requirements.txt
      - ./back/airflow/init.sh:/opt/airflow/init.sh
    ports:
      - "8304:8080"
    entrypoint: /opt/airflow/init.sh
    command: webserver
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  airflow-scheduler:
    image: apache/airflow:2.9.1-python3.11
    container_name: levelupper-airflow-scheduler
    <<: *app
    volumes:
      - ./back/airflow/dags:/opt/airflow/dags
      - ./back/airflow/logs:/opt/airflow/logs
      - ./back/airflow/plugins:/opt/airflow/plugins
      - ./back/app:/opt/airflow/app
      - ./back/airflow/requirements.txt:/requirements.txt
      - ./back/airflow/init.sh:/opt/airflow/init.sh
    entrypoint: /opt/airflow/init.sh
    command: scheduler
    depends_on:
      airflow-webserver:
        condition: service_started

  backend:
    build:
      context: ./back/app
    container_name: levelupper-backend
    <<: *app
    volumes:
      - ./back/app:/usr/src/app
    ports:
      - "8302:8000"
    command: python -m src.main
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build:
      context: ./front
      target: dev
      args:
        - VITE_LOGGING=${VITE_LOGGING:-1}
        - VITE_AUTH_URL=${VITE_AUTH_URL:-http://localhost:8301}
        - VITE_BACKEND_URL=${VITE_BACKEND_URL:-http://localhost:8302}
    <<: *app
    container_name: levelupper-frontend
    volumes:
      - ./front/app/src:/usr/src/app/src
    ports:
      - "8303:5173"
    depends_on:
      backend:
        condition: service_started

volumes:
  postgres_volume:
    driver: local
  redis_volume:
    driver: local
  es_volume:
    driver: local
